
###############################################
# Last Change: 2020-10-23
# Author: Kong Jun <kongjun18@outlook.com>
# Github: https://github.com/kongjun18
###############################################
priority -50

snippet cxxproject "C++ project declaration" b
cmake_minimum_required(VERSION 3.17)
project(${1:name} LANGUAGES CXX)
set(CMAKE_CXX_STANDARD ${2:17})
set(CMAKE_CXX_EXTENSIONS OFF)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
$3
endsnippet

snippet qtproject "Qt project declaration" b
cmake_minimum_required(VERSION 3.5)

project(${1:QtProject} LANGUAGES CXX)

set(CMAKE_INCLUDE_CURRENT_DIR ON)

set(CMAKE_AUTOUIC ON)
set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTORCC ON)

set(CMAKE_CXX_STANDARD ${2:17})
set(CMAKE_CXX_STANDARD_REQUIRED ON)

set(CMAKE_VERBOSE_MAKEFILE ON)
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)


find_package(QT NAMES Qt6 Qt5 COMPONENTS Widgets REQUIRED)
find_package(Qt${QT_VERSION_MAJOR} COMPONENTS Widgets REQUIRED)

add_executable(${3:QtProject} ${4:main.cpp mainwindow.cpp mainwindow.h mainwindow.ui})
target_link_libraries(${3:QtProject} PRIVATE Qt${QT_VERSION_MAJOR}::Widgets)
endsnippet

snippet cproject "C project declaration" b
cmake_minimum_required(VERSION 3.17)
project(${1:name} LANGUAGES C)
set(CMAKE_C_STANDARD ${2:11})
set(CMAKE_C_EXTENSIONS ON)
set(CMAKE_C_STANDARD_REQUIRED ON)
$3
endsnippet

snippet fmt "Build fmt using FetchContent" b
# Build fmt via FetchContent
message(STATUS "Building fmt")
FetchContent_Declare(fmt
  GIT_REPOSITORY    https://github.com/fmtlib/fmt.git
  GIT_TAG master
)
FetchContent_MakeAvailable(fmt)
${1}
endsnippet

snippet gtest "Build googletest using FetchContent" b
# Build googletest via FetchContent
message(STATUS "Building fmt")
FetchContent_Declare(fmt
  GIT_REPOSITORY    https://github.com/fmtlib/fmt.git
  GIT_TAG master
)
FetchContent_MakeAvailable(fmt)
${1}
endsnippet
